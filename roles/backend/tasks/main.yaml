  - name: disable nodejs module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enalbe nodejs module
    ansible.builtin.command: dnf module enable nodejs:20 -y

  
  - name: install nodejs
    ansible.builtin.package:
      name: "{{ item }}"
      state: installed
    loop:
    - nodejs
    - mysql

  - name: add user expense
    ansible.builtin.user:
      name: expense
  

  - name: directory creation
    ansible.builtin.file:
      path: /app
      state: directory
      
  - name: download application code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unarchive backup zip file
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    community.general.npm:
      path: /app
  

  - name: Copy backend service 
    ansible.builtin.template:  #we have to use template module to copy backend.service.j2 file. it we dont user it will give error(if we profile file/**.yaml) it will copy with copy module.
      src: backend.service.j2
      dest: /etc/systemd/system/backend.service
    

  - name: install python libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
      - PyMySQL
      - cryptography
  

  - name: import mysql data
    community.mysql.mysql_db:
      name: backend
      login_user: "{{ MYSQL_USER }}"
      login_password: "{{ MYSQL_PASSWORD }}"
      login_host: "{{ MYSQL_HOST }}"
      target: /app/schema/backend.sql
      
    # notify: Restart backend

  - name: Restart backend
    ansible.builtin.systemd_service:
      name: backend
      state: restarted
      daemon_reload: true
      enabled: true